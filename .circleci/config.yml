version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8
    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: Install Python and dependencies
      - run:
          name: create venv and install dependencies
          command: |
            virtualenv env
            source env/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run unit test
          command: |
            source env/bin/activate
            python test_application.py
     
  push-to-dockerhub:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - deploy:
          name: Push application Docker image
          command: |
            docker build -t "${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" .
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PAT}"
            docker push "${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
  
  update-yaml-with-details:
    docker:
      - image: cimg/base:2022.06
    steps:
      - run:
          name: Install YQ CLI
          command: |
            wget https://github.com/mikefarah/yq/releases/download/v4.18.1/yq_linux_amd64 -O /usr/local/bin/yq &&\
            chmod a+x /usr/local/bin/yq
            yq --version
      - run:
          name: Clone argocd-manifests
          command: |
            git config --global user.email "subha0341@gmail.com"
            git config --global user.name "subha0341"
            git clone "https://${GITHUB_PAT}@github.com/subha0341/helm-charts.git"
            cd helm-charts
            yq -i '.deployment.image.tag="'${CIRCLE_SHA1}'"' values.yaml
            git add .
            git commit -m "updated tag $CIRCLE_SHA1"
            git push "https://${GITHUB_PAT}@github.com/subha0341/helm-charts.git" main
            
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - gate-to-prod:
          type: approval
          requires:
            - build
      - push-to-dockerhub:
          requires:
            - gate-to-prod
      - update-yaml-with-details:
          requires:
            - push-to-dockerhub
